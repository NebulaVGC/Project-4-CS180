import java.io.*;
import java.util.ArrayList;
import java.util.Scanner;

public class Teacher {
    private String name;
    private Scanner scan = new Scanner(System.in);
    private ArrayList<String> course = new ArrayList<>();


    public Teacher(String name) {
        this.name = name;
        File f = new File(name + "_Courses.txt");
        try {
            f.createNewFile();
        } catch (IOException e) {
            e.printStackTrace();
        }

    }

    public String getName() {
        return name;
    }

    public void createCourse() {
        System.out.println("Enter the name of the new course or press N to exit");
        String courseName = "";
        String temp = "";
        if(scan.hasNext()){
            temp = scan.next();
        }
        if(scan.hasNext()){
            courseName = temp + scan.nextLine();
        }
        if (courseName.equals("N")) {
            return;
        }
        try {
            File f1 = new File(name + "_Courses.txt");
            PrintWriter pw = new PrintWriter(new FileOutputStream(f1, true));
            File f2 = new File(name + "_" + courseName + ".txt");
            f2.createNewFile();
            pw.println(courseName);
            pw.close();
            System.out.println("Course added successfully");
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }

    }

    public void deleteCourse() {
        String courseName = "";
        ArrayList<String> list = new ArrayList<>();
        File f1;
        do {
            System.out.println("Enter the name of the course you want to delete or press N to exit");
            if(scan.hasNext()){
                courseName = scan.next();
            }
            f1 = new File(name + "_" + courseName);
            if (courseName.equals("N")) {
                return;
            } else if (!f1.exists()) {
                System.out.println("That course does not exist");
            }

        } while (!f1.exists());
        course.remove(courseName);
        File f = new File(name + "_Courses.txt");
        try {
            BufferedReader bfr = new BufferedReader(new FileReader(f));
            String line = bfr.readLine();
            while (line != null) {
                if (!line.equals(courseName)) {
                    list.add(line);
                    line = bfr.readLine();
                } else {
                    line = bfr.readLine();
                }
            }
            PrintWriter pw = new PrintWriter(new FileOutputStream(f));
            for (int i = 0; i < list.size(); i++) {
                pw.println(list.get(i));
            }
            pw.close();
            bfr.close();

        } catch (FileNotFoundException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }

        File f3 = new File(name + "_" + courseName + ".txt");
        if (f3.delete()) {
            System.out.println("Course deleted successfully!");
        } else {
            System.out.println("Course could not be deleted");
        }

    }

    public void createQuiz() {
        String courseName = "";
        String quizName = "";
        int contains = 0;
        PrintWriter pw = null;
        PrintWriter pw2 = null;
        boolean randomized = false;
        File courseFile;
        String temp = "";
        do {
            System.out.println("Please enter the course name or press N to exit");
            if(scan.hasNext()){
                temp = scan.next();
            }
            if(scan.hasNext()){
                courseName = temp + scan.nextLine();
            }
            if (courseName.equals("N")) {
                return;
            }
            courseFile = new File(name + "_" + courseName + ".txt");
            if (courseFile.exists()) {
                contains = 1;
            }
            if (contains == 0) {
                System.out.println("This course does not exist.");
            }
        } while (contains == 0);
        System.out.println("Please enter the name of the quiz or press N to exit");
        if(scan.hasNext()){
            temp = scan.next();
        }
        if(scan.hasNext()){
            quizName = temp + scan.nextLine();
        }
        if (quizName.equals("N")) {
            return;
        }
        File courseQuiz = new File(name + "_" + courseName + ".txt");
        PrintWriter pw3 = null;
        try {
            pw3 = new PrintWriter(new FileOutputStream(courseQuiz, true));
            pw3.println(quizName);
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        }
        int imported = 0;
        String importedString = "";
        do {
            System.out.println("Do you want to create a quiz or import a quiz? Press N to exit\n1: Create\n2: Import");
            if(scan.hasNext()){
                temp = scan.next();
                importedString = temp + scan.nextLine();
            }
            if (importedString.equals("N")) {
                return;
            }
            try {
                imported = Integer.parseInt(importedString);
            } catch (NumberFormatException e) {
                System.out.println("Not an option");
                imported = 0;
            }
        } while (imported < 1 || imported > 2);
        String filePath = "";
        if (imported == 2) {
            System.out.println("What is the filepath of the quiz?");
            if(scan.hasNext()){
                temp = scan.next();
            }
            if(scan.hasNext()){
                filePath = temp + scan.nextLine();
            }

            File f = new File(filePath);
            if (!f.exists()) {
                do {
                    System.out.println("That file does not exist. Please enter a new file or press N to exit");
                    if(scan.hasNext()){
                        temp = scan.next();
                    }
                    if(scan.hasNext()){
                        filePath = temp + scan.nextLine();
                    }

                    f = new File(filePath);
                    if (filePath.equals("N")) {
                        return;
                    }
                } while (!f.exists());
            }
            try {
                ArrayList<String> importList = new ArrayList<>();
                BufferedReader bfr = new BufferedReader(new FileReader(f));
                String line = bfr.readLine();
                while (line != null) {
                    importList.add(line);
                    line = bfr.readLine();
                }
                File f2 = new File(name + "_" + courseName + "_" + quizName + ".txt");
                f.createNewFile();
                PrintWriter pw4 = new PrintWriter(new FileOutputStream(f2));
                for (int i = 0; i < importList.size(); i++) {
                    pw4.println(importList.get(i));
                }
                System.out.println("The quiz has been created");
                pw4.close();
                bfr.close();
            } catch (FileNotFoundException e) {
                e.printStackTrace();
            } catch (IOException e) {
                e.printStackTrace();
            }
        } else {

            System.out.println("Do you want the quiz to be randomized? Y/N");
            if (scan.next().equals("Y")) {
                randomized = true;
            }


            try {
                File f = new File(name + "_" + courseName + "_" + quizName + ".txt");
                pw = new PrintWriter(new FileOutputStream(f));
                File f2 = new File(name + "_" + courseName + "_" + quizName + "_correctAnswers.txt");
                pw2 = new PrintWriter(new FileOutputStream(f2));


            } catch (FileNotFoundException e) {
                e.printStackTrace();
            }
            int count = 1;
            int choice = 1;

            System.out.println("Do you want to add a question?");
            System.out.println("1.Yes");
            System.out.println("2.No");
            if(scan.hasNext()){
                choice = scan.nextInt();
                scan.nextLine();
            }
            pw.println(randomized);
            while (choice == 1) {
                String correctAnswer = "";
                String givenQuestion = "";
                String answerA = "";
                String answerB = "";
                String answerC = "";
                String answerD = "";
                    System.out.println("Please type question " + count);
                    if(scan.hasNext()){
                        temp = scan.next();
                    }
                    if(scan.hasNext()){
                        givenQuestion = temp + scan.nextLine();
                    }
                    System.out.println("Please type answer option A");
                    if(scan.hasNext()){
                        temp = scan.next();
                    }
                    if(scan.hasNext()){
                        answerA = temp + scan.nextLine();
                    }
                    System.out.println("Please type answer option B");
                    if(scan.hasNext()){
                        temp = scan.next();
                    }
                    if(scan.hasNext()){
                        answerB = temp + scan.nextLine();
                    }
                    System.out.println("Please type answer option C");
                    if(scan.hasNext()){
                        temp = scan.next();
                    }
                    if(scan.hasNext()){
                        answerC = temp + scan.nextLine();
                    }
                    System.out.println("Please type answer option D");
                    if(scan.hasNext()){
                        temp = scan.next();
                    }
                    if(scan.hasNext()){
                        answerD = temp + scan.nextLine();
                    }

                do {
                    System.out.println("Please enter the correct answer choice");
                    if(scan.hasNext()){
                        temp = scan.next();
                    }
                    if(scan.hasNext()){
                        correctAnswer = temp + scan.nextLine();
                    }
                    if (!correctAnswer.equals("A") && !correctAnswer.equals("B") && !correctAnswer.equals("C")
                            && !correctAnswer.equals("D")) {
                        System.out.println("That is not an option");
                    }
                } while (!correctAnswer.equals("A") && !correctAnswer.equals("B") && !correctAnswer.equals("C")
                        && !correctAnswer.equals("D"));
                count = count + 1;

                pw.println(givenQuestion);
                pw.println("A. " + answerA);
                pw.println("B. " + answerB);
                pw.println("C. " + answerC);
                pw.println("D. " + answerD);
                pw2.println(correctAnswer);
                System.out.println("Do you want to add another question?");
                System.out.println("1.Yes");
                System.out.println("2.No");
                if(scan.hasNext()){
                    choice = scan.nextInt();
                    scan.nextLine();
                }

            }

            System.out.println("The quiz is completed");

            pw.close();
            pw3.close();
            pw2.close();
        }
    }

    public void editQuiz() {
        //ask for the file name of the quiz that is going to be edited. Print that quiz to an arraylist. Ask for the quesiton that is going to be edited
        // Edit the specific lines of the array list that corrospondto the question that is being editied. set these edited lines to the arraylist
        // print the new arraylist to the file and save it
        ArrayList<String> list = new ArrayList<>();
        String temp = "";
        String courseName = "";
        File courseFile;
        do {
            System.out.println("Enter the course the quiz is in or press N to exit");
            if(scan.hasNext()){
                temp = scan.next();
            }
            if(scan.hasNext()){
                courseName = temp + scan.nextLine();
            }
            courseFile = new File(name + "_" + courseName + ".txt");
            if (courseName.equals("N")) {
                return;
            }

            if (!courseFile.exists()) {
                System.out.println("That course does not exist.");
            }
        } while (!courseFile.exists());
        System.out.println("Enter the name of the quiz you want to edit or press N to exit.");
        if(scan.hasNext()){
            temp = scan.next();
        }
        String quizName = "";
        if(scan.hasNext()){
            quizName = temp + scan.nextLine();
        }
        File f2;
        do {
            f2 = new File(name + "_" + courseName + "_" + quizName + ".txt");
            if (!f2.exists()) {
                System.out.println("That quiz does not exist. Enter another quiz or press N to exit");
                if(scan.hasNext()){
                    temp = scan.next();
                }
                if(scan.hasNext()){
                    quizName = temp + scan.nextLine();
                }
                f2 = new File(name + "_" + courseName + "_" + quizName);
            }
            if (quizName.equals("N")) {
                return;
            }

        } while (!f2.exists());
        try {
            int counter = 1;
            String lineNumber = "";
            String newLine = "";
            int newLineNumber = 0;
            BufferedReader bfr = new BufferedReader(new FileReader(f2));
            String line = bfr.readLine();
            while (line != null) {
                System.out.println(counter + ": " + line);
                list.add(line);
                line = bfr.readLine();
                counter++;
            }

            System.out.println("Enter the number of the line you would like to edit, press Y to add more questions, or press N to exit");
            if(scan.hasNext()){
                temp = scan.next();
            }
            if(scan.hasNext()){
                lineNumber = temp + scan.nextLine();
            }
            do {
                newLine = "";
                if (lineNumber.equals("N")) {
                    return;
                } else if (lineNumber.equals("Y")) {

                } else {
                    try {
                        newLineNumber = Integer.parseInt(lineNumber);
                        if (newLineNumber < 1 || newLineNumber > list.size()) {
                            throw new NumberFormatException();
                        }
                    } catch (NumberFormatException e) {
                        System.out.println("Not an option");
                        System.out.println("Enter the number of the line you would like to edit, press Y to add more questions, or press N to exit");
                        if(scan.hasNext()){
                            temp = scan.next();
                        }
                        if(scan.hasNext()){
                            lineNumber = temp + scan.nextLine();
                        }

                        newLineNumber = 0;

                    }
                }
            } while (newLineNumber < 1 || newLineNumber > list.size());
            System.out.println(list.get(newLineNumber - 1));
            System.out.println("What should the line say now?");
            if(scan.hasNext()){
                temp = scan.next();
            }
            if(scan.hasNext()){
                newLine = temp + scan.nextLine();
            }


            list.set(newLineNumber - 1, newLine);
            PrintWriter pw = new PrintWriter(new FileOutputStream(f2));
            for (int i = 0; i < list.size(); i++) {
                pw.println(list.get(i));
            }
            System.out.println("Quiz edited successfully");
            pw.close();
            bfr.close();

        } catch (FileNotFoundException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }

    }

    public void deleteQuiz() {
        String courseName = "";
        String temp = "";
        File courseFile;
        do {
            System.out.println("Enter the course the quiz is in or press N to exit");
            if(scan.hasNext()){
                 temp = scan.next();
            }
            if(scan.hasNext()){
                courseName = temp + scan.nextLine();
            }


            courseFile = new File(name + "_" + courseName + ".txt");
            if (courseName.equals("N")) {
                return;
            } else if (!courseFile.exists()) {
                System.out.print("That course does not exist. ");
            }
        } while (!courseFile.exists());
        File file;
        String quizName = "";
        do {
            System.out.println("Enter the name of the quiz you want to delete or press N to exit");
            if(scan.hasNext()){
                temp = scan.next();

            }
            if(scan.hasNext()){
                quizName = temp + scan.nextLine();
            }
            file = new File(name + "_" + courseName + "_" + quizName + ".txt");
            if (quizName.equals("N")) {
                return;
            } else if (!file.exists()) {
                System.out.println("That file does not exist");
            }
        } while (!file.exists());
        file.delete();
        System.out.println("File deleted successfully");
    }

    public void viewStudentSubmission() {
        String student = "";
        String courseName = "";
        String quizName = "";
        String temp = "";
        ArrayList<String> studentNames = new ArrayList<>();
        File courseFile;
        File studentFile = new File("StudentAccount.txt");
        try {
            BufferedReader bfr = new BufferedReader(new FileReader(studentFile));
            String line = bfr.readLine();
            while (line != null) {
                studentNames.add(line);
                line = bfr.readLine();
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
        do {
            System.out.println("Enter the name of the student you would like to view or press N to exit");
            if(scan.hasNext()){
                temp = scan.next();
            }
            if(scan.hasNext()){
                student = temp + scan.nextLine();
            }
            if (student.equals("N")) {
                return;
            } else if (studentNames.indexOf(student) < 0) {
                System.out.println("That student does not exist");
            }
        } while (studentNames.indexOf(student) < 0);

        do {
            System.out.println("Enter the quiz course or press N to exit");
            if(scan.hasNext()){
                temp = scan.next();
            }
            if(scan.hasNext()){
                courseName = temp + scan.nextLine();
            }
            courseFile = new File(name + "_" + courseName + ".txt");
            if (courseName.equals("N")) {
                return;
            } else if (!courseFile.exists()) {
                System.out.println("That course does not exist");
            }
        } while (!courseFile.exists());
        File quizFile;
        do {
            System.out.println("Enter the name of the quiz or press N to exit");
            if(scan.hasNext()){
                temp = scan.next();
            }
            if(scan.hasNext()){
                quizName = temp + scan.nextLine();
            }

            if (quizName.equals("N")) {
                return;
            }
            quizFile = new File(student + "_" + name + "_" + courseName + "_" + quizName + ".txt");
            if (!quizFile.exists()) {
                System.out.println("This quiz does not exist");
            }
        } while (!quizFile.exists());

        try {
            BufferedReader bfr = new BufferedReader(new FileReader(quizFile));
            String line = bfr.readLine();
            while (line != null) {
                System.out.println(line);
                line = bfr.readLine();
            }
            bfr.close();
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    /*public void automaticGrade() {
        String student;
        String course;
        String quizName;
        int numCorrect;
        int totalQuestions;
        System.out.println("Enter the name of the student you would like to view");
        student = scan.next();
        System.out.println("Enter the quiz course");
        course = scan.next();
        System.out.println("Enter the name of the quiz");
        quizName = scan.next();
        File studentQuiz = new File(student + "_" + name + "_" + course + "_" + quizName);
        if (!studentQuiz.exists()) {
            System.out.println("This quiz does not exist");

        } else {
            File teacherQuiz = new File(name + "_" + quizName);
            try {
                BufferedReader bfr1 = new BufferedReader(new FileReader(studentQuiz));
                BufferedReader bfr2 = new BufferedReader(new FileReader(teacherQuiz));
                String line1 = bfr1.readLine();
                String line2 = bfr2.readLine();
                while (line2 != null) {
                    bfr1.
                }
            } catch (FileNotFoundException e) {
                e.printStackTrace();
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
    }*/

    public void manualGrade() {
        String student =  "";
        String courseName = "";
        String quizName = "";
        String temp = "";
        int numCorrect = 0;
        int totalQuestions;
        ArrayList<String> studentNames = new ArrayList<>();
        File courseFile;
        File studentFile = new File("StudentAccount.txt");
        try {
            BufferedReader bfr = new BufferedReader(new FileReader(studentFile));
            String line = bfr.readLine();
            while (line != null) {
                studentNames.add(line);
                line = bfr.readLine();
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
        do {
            System.out.println("Enter the name of the student you would like to view or press N to exit");
            if(scan.hasNext()){
                temp = scan.next();
            }
            if(scan.hasNext()){
                student = temp + scan.nextLine();
            }

            if (student.equals("N")) {
                return;
            } else if (studentNames.indexOf(student) < 0) {
                System.out.println("That student does not exist");
            }
        } while (studentNames.indexOf(student) < 0);
        do {
            System.out.println("Enter the quiz course or press N to exit");
            if(scan.hasNext()){
                temp = scan.next();
            }
            if(scan.hasNext()){
                courseName = temp + scan.nextLine();
            }

            if (courseName.equals("N")) {
                return;
            }
            courseFile = new File(name + "_" + courseName + ".txt");
            if (!courseFile.exists()) {
                System.out.println("That course does not exist");
            }
        } while (!courseFile.exists());
        File quizFile;
        do {
            System.out.println("Enter the name of the quiz or press N to exit");
            if(scan.hasNext()){
                temp = scan.next();
            }
            if(scan.hasNext()){
                quizName = temp + scan.nextLine();
            }

            if (quizName.equals("N")) {
                return;
            }
            quizFile = new File(name + "_" + courseName + "_" + quizName + ".txt");
            if (!quizFile.exists()) {
                System.out.println("That quiz does not exist");
            }
        } while (!quizFile.exists());
        File studentQuiz = new File(student + "_" + name + "_" + courseName + "_" + quizName + ".txt");
        if (!studentQuiz.exists()) {
            System.out.println("This quiz does not exist");
        } else {
            try {
                BufferedReader bfrQuestions = new BufferedReader(new FileReader(studentQuiz));
                BufferedReader bfrAnswers = new BufferedReader(new FileReader(studentQuiz));
                ArrayList<String> entireFile = new ArrayList<>();
                ArrayList<String> correct = new ArrayList<>();
                String questionLine = bfrQuestions.readLine();
                if (questionLine.equals("true") || questionLine.equals("false")) {
                    questionLine = bfrQuestions.readLine();
                    String answerLine = bfrAnswers.readLine();
                    while (!answerLine.equals("A") && !answerLine.equals("B") && !answerLine.equals("C") && !answerLine.equals("D")) {
                        answerLine = bfrAnswers.readLine();
                    }
                    while (answerLine.equals("A") || answerLine.equals("B") || answerLine.equals("C") || answerLine.equals("D")) {
                        System.out.println(questionLine);
                        questionLine = bfrQuestions.readLine();
                        System.out.println(questionLine);
                        questionLine = bfrQuestions.readLine();
                        System.out.println(questionLine);
                        questionLine = bfrQuestions.readLine();
                        System.out.println(questionLine);
                        questionLine = bfrQuestions.readLine();
                        System.out.println(questionLine);
                        System.out.println("Student Answer: " + answerLine);
                        answerLine = bfrAnswers.readLine();
                        String yesNo = null;
                        do {
                            System.out.println("Is this correct? Y/N");
                            if(scan.hasNext()){
                                temp = scan.next();
                            }
                            if(scan.hasNext()){
                                yesNo = temp + scan.nextLine();
                            }

                            if (!yesNo.equals("Y") && !yesNo.equals("N")) {
                                System.out.println("Try again");
                            } else if (yesNo.equals("Y")) {
                                numCorrect++;
                            }
                        } while (!yesNo.equals("Y") && !yesNo.equals("N"));
                        correct.add(yesNo);
                        questionLine = bfrQuestions.readLine();
                    }

                    BufferedReader bfr3 = new BufferedReader(new FileReader(studentQuiz));
                    String line = bfr3.readLine();
                    line = bfr3.readLine();
                    while (line != null) {
                        entireFile.add(line);
                        line = bfr3.readLine();
                    }
                    double percentage = (double) numCorrect / correct.size() * 100;
                    PrintWriter pw = new PrintWriter(new FileOutputStream(studentQuiz));
                    int j = 0;
                    for (int i = 0; i < entireFile.size(); i++) {

                        if (entireFile.get(i).equals("A") || entireFile.get(i).equals("B") ||
                                entireFile.get(i).equals("C") || entireFile.get(i).equals("D")) {
                            if (correct.get(j).equals("Y")) {
                                pw.println(entireFile.get(i) + " Correct");
                            } else {
                                pw.println(entireFile.get(i) + " Incorrect");
                            }
                            j++;
                        } else {
                            pw.println(entireFile.get(i));
                        }

                    }
                    pw.println(percentage + "%");

                    pw.close();
                    bfrQuestions.close();
                    bfrAnswers.close();
                    bfr3.close();
                } else {
                    System.out.println("This quiz has already been graded");
                }
            } catch (FileNotFoundException e) {
                e.printStackTrace();
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
    }

    public static void main(String[] args) {
            /*String[] s = {"Physics", "Math", "English"};
            Teacher teacher = new Teacher("Teacher", s);
            teacher.teacherInterface();*/
        Teacher teacher = new Teacher("Teacher");
        teacher.teacherInterface();
    }

    public void teacherInterface() {
        int choice = 0;
        while (choice != 8) {

            do {
                choice = 0;

                System.out.println("What would you like to do?\n1. Create Quiz\n2. Edit Quiz\n3. Delete Quiz");
                System.out.println("4. Grade Quiz\n5. View Student Submission\n6. Create Course\n7. Delete Course");
                System.out.println("8. Exit");
                try {
                    if(scan.hasNext()){
                        choice = Integer.parseInt(scan.next());
                    }

                } catch (NumberFormatException e) {
                    choice = 0;
                }
                if (choice < 1 || choice > 8) {
                    System.out.println("Not an option\n");
                    choice = 0;
                }

            } while (choice < 1 || choice > 8);

            if (choice == 1) {
                createQuiz();
            } else if (choice == 2) {
                editQuiz();
            } else if (choice == 3) {
                deleteQuiz();
            } else if (choice == 4) {
                manualGrade();
            } else if (choice == 5) {
                viewStudentSubmission();
            } else if (choice == 6) {
                createCourse();
            } else if (choice == 7) {
                deleteCourse();
            }
        }
        System.out.println("Goodbye!");
    }
}
